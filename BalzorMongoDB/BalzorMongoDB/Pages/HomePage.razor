@page "/Tables"
@using Radzen.Blazor
@using BalzorMongoDB.Data
@*getting date from other files*@
@inject BalzorMongoDB.IService.IAgent agentService
@inject BalzorMongoDB.IService.IAppliances appliancesService
@inject BalzorMongoDB.IService.IAppliancesOwned appliancesOwnedService
@inject BalzorMongoDB.IService.ICompany companyService
@inject BalzorMongoDB.IService.ICounty countyService
@inject BalzorMongoDB.IService.IEmployee employeeService
@inject BalzorMongoDB.IService.IHome homeService
@inject BalzorMongoDB.IService.IHomeOwner homeOwnerService
@inject BalzorMongoDB.IService.IListing listingService
@inject BalzorMongoDB.IService.ILocation locationService
@inject BalzorMongoDB.IService.ISalesMade salesMadeService

@*page title*@
<h5>Real Estate Database</h5>
<br/>
<br/>

@*drop down to switch between tables*@
<div class="col-md-2">
	<div class="mb-3">
		<label class="form-check-label fw-bold">Select Table View</label>
		<select class="form-select" @bind="tableViewed">
			<option value="Agent">Agent</option>
			<option value="Appliances">Appliances</option>
			<option value="Appliances Owned">Appliances Owned</option>
			<option value="Company">Company</option>
			<option value="County">County</option>
			<option value="Employee">Employee</option>
			<option value="Homes">Homes</option>
			<option value="Home Owners">Home Owners</option>
			<option value="Listings">Listings</option>
			<option value="Locations">Locations</option>
			<option value="Sales Made">Sales Made</option>
		</select>
	</div>
</div>
<br />

@*Displaying table when table view type selected*@
@if (tableViewed == "Agent")
{
	
	<label class="form-check-label fw-bold">Agents Table</label>

	<RadzenDataGrid Data="@Agents" TItem="Agent" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Agent" Property="agentID" Title="Agent ID" />
			<RadzenDataGridColumn TItem="Agent" Property="firstName" Title="First Name" />
			<RadzenDataGridColumn TItem="Agent" Property="lastName" Title="Last Name" />
		</Columns>
	</RadzenDataGrid>
}
else if (tableViewed == "Appliances")
{
	<h5>Appliances Table</h5>

	<RadzenDataGrid Data="@AppliancesList" TItem="Appliances" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Appliances" Property="modelNameNum" Title="Model Name/No." />
			<RadzenDataGridColumn TItem="Appliances" Property="manufacturer" Title="Manufacturer" />
			<RadzenDataGridColumn TItem="Appliances" Property="applianceName" Title="Appliance Name" />
			<RadzenDataGridColumn TItem="Appliances" Property="appliancePrice" Title="Appliance Price" />
		</Columns>

	</RadzenDataGrid>
}
else if (tableViewed == "Appliances Owned")
{
	<h5>Appliances Owned Table</h5>

	<RadzenDataGrid Data="@AppliancesOwned" TItem="AppliancesOwned" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="modelNameNum" Title="Model Name/No." />
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="manufacturer" Title="Manufacturer" />
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="applianceName" Title="Appliance Name" />
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="quantity" Title="Quantity" />
			<RadzenDataGridColumn TItem="AppliancesOwned" Property="retailPrice" Title="Retail Price" />
		</Columns>

	</RadzenDataGrid>
}
else if (tableViewed == "Company")
{
	<h5>Company Table</h5>

	<RadzenDataGrid Data="@Companies" TItem="Company" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Company" Property="companyName" Title="Company Name" />
			<RadzenDataGridColumn TItem="Company" Property="officeID" Title="Office ID" />
			<RadzenDataGridColumn TItem="Company" Property="cityName" Title="City Name" />
		</Columns>

	</RadzenDataGrid>
}
else if (tableViewed == "County")
{
	<h5>Counties Table</h5>

	<RadzenDataGrid Data="@Counties" TItem="County" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="County" Property="countyName" Title="County Name" />
			<RadzenDataGridColumn TItem="County" Property="cityName" Title="City Name" />
			<RadzenDataGridColumn TItem="County" Property="cityPop" Title="City Pop" />
		</Columns>

	</RadzenDataGrid>
}
else if (tableViewed == "Employee")
{
	<h5>Employee Table</h5>

	<RadzenDataGrid Data="@Employees" TItem="Employee" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Employee" Property="employeeID" Title="Employee Id" />
			<RadzenDataGridColumn TItem="Employee" Property="companyName" Title="Company Name" />
			<RadzenDataGridColumn TItem="Employee" Property="agentID" Title="Agent ID" />
			<RadzenDataGridColumn TItem="Employee" Property="commissionRate" Title="Commision Rate" />
		</Columns>

	</RadzenDataGrid>
}
else if (tableViewed == "Homes")
{
	<h5>Home Table</h5>

	<RadzenDataGrid Data="@Homes" TItem="Home" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Home" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="Home" Property="floorSpace" Title="FloorSpace" />
			<RadzenDataGridColumn TItem="Home" Property="floors" Title="Floors" />
			<RadzenDataGridColumn TItem="Home" Property="bedRooms" Title="Bedrooms" />
			<RadzenDataGridColumn TItem="Home" Property="bathRooms" Title="Bathrooms" />
			<RadzenDataGridColumn TItem="Home" Property="landSize" Title="LandSize" />
			<RadzenDataGridColumn TItem="Home" Property="yearConstructed" Title="Year Constructed" />
			<RadzenDataGridColumn TItem="Home" Property="homeType" Title="Home Type" />
			<RadzenDataGridColumn TItem="Home" Property="extraFeatures" Title="Extra Features" />
			<RadzenDataGridColumn TItem="Home" Property="unitNum" Title="Unit No." />
		</Columns>
	</RadzenDataGrid>

}
else if (tableViewed == "Home Owners")
{
	<h5>Home Owner Table</h5>

	<RadzenDataGrid Data="@HomeOwners" TItem="HomeOwner" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="HomeOwner" Property="SSN" Title="SSN" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="firstName" Title="First Name" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="lastName" Title="Last Name" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="dependents" Title="Dependents" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="income" Title="Income" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="age" Title="Age" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="profession" Title="Proffession" />
			<RadzenDataGridColumn TItem="HomeOwner" Property="isCurrentOwner" Title="Current Owner" />
		</Columns>
	</RadzenDataGrid>
}
else if (tableViewed == "Listings")
{
	<h5>Listing Table</h5>

	<RadzenDataGrid Data="@Listings" TItem="Listing" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Listing" Property="ownerID" Title="Owner ID" />
			<RadzenDataGridColumn TItem="Listing" Property="employeeID" Title="Employee ID" />
			<RadzenDataGridColumn TItem="Listing" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="Listing" Property="availableStartDate" Title="Avalible Start Date" />
			<RadzenDataGridColumn TItem="Listing" Property="availableEndDate" Title="Avalible End Date" />
			<RadzenDataGridColumn TItem="Listing" Property="listingPrice" Title="Listing Price" />
			<RadzenDataGridColumn TItem="Listing" Property="isSold" Title="Is Sold" />
			<RadzenDataGridColumn TItem="Listing" Property="soldTo" Title="Sold To" />
		</Columns>
	</RadzenDataGrid>
}
else if (tableViewed == "Locations")
{
	<h5>Location Table</h5>

	<RadzenDataGrid Data="@Locations" TItem="Location" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="Location" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="Location" Property="cityName" Title="City Name" />
			<RadzenDataGridColumn TItem="Location" Property="street" Title="Street" />
			<RadzenDataGridColumn TItem="Location" Property="zipCode" Title="Zip Code" />
			<RadzenDataGridColumn TItem="Location" Property="unitNum" Title="Unit No." />
		</Columns>
	</RadzenDataGrid>
}
else if (tableViewed == "Sales Made")
{
	<h5>Sales Made Table</h5>

	<RadzenDataGrid Data="@SalesMadeList" TItem="SalesMade" AllowSorting="true" AllowColumnReorder="true" AllowColumnPicking="true"
				AllowMultiColumnSorting="true" AllowFiltering="true">
		<Columns>
			<RadzenDataGridColumn TItem="SalesMade" Property="ownerID" Title="Owner ID" />
			<RadzenDataGridColumn TItem="SalesMade" Property="employeeID" Title="Employee ID" />
			<RadzenDataGridColumn TItem="SalesMade" Property="homeID" Title="Home ID" />
			<RadzenDataGridColumn TItem="SalesMade" Property="ownerStartDate" Title="Owner Start Date" />
			<RadzenDataGridColumn TItem="SalesMade" Property="ownerEndDate" Title="Owner End Date" />
			<RadzenDataGridColumn TItem="SalesMade" Property="salePrice" Title="Sale Price" />
		</Columns>
	</RadzenDataGrid>
}


@*variable to check table selected*@
@code{
	public string tableViewed { get; set; } = "Homes";
}


@*creating instance of each table on page creation*@
@code {
	protected override async Task OnInitializedAsync()
	{
		GetAgents();
		GetAppliances();
		GetAllAppliancesOwned();
		GetCompanies();
		GetCounties();
		GetEmployees();
		GetHomes();
		GetHomeOwners();
		GetListings();
		GetLocations();
		GetAllSalesMade();
	}
}

@code {
	//Creating instance of class
	Agent agent = new Agent();
	List<Agent> Agents = new List<Agent>();

	//calling view table function
	private void GetAgents()
	{
		Agents = agentService.GetAgents();
	}
}

@code {
	//Creating instance of class
	Appliances appliances = new Appliances();
	List<Appliances> AppliancesList = new List<Appliances>();

	//calling view table function
	private void GetAppliances()
	{
		AppliancesList = appliancesService.GetAppliances();
	}

}

@code
{
	//Creating instance of class
	AppliancesOwned appliancesOwned = new AppliancesOwned();
	List<AppliancesOwned> AppliancesOwned = new List<AppliancesOwned>();

	//calling view table function
	private void GetAllAppliancesOwned()
	{
		AppliancesOwned = appliancesOwnedService.GetAppliancesOwned();
	}

}

@code
{
	//Creating instance of class
	Company company = new Company();
	List<Company> Companies = new List<Company>();

	//calling view table function
	private void GetCompanies()
	{
		Companies = companyService.GetCompanies();
	}
}

@code
{
	//Creating instance of class
	County county = new County();
	List<County> Counties = new List<County>();

	//calling view table function
	private void GetCounties()
	{
		Counties = countyService.GetCounties();
	}
}

@code {
	//Creating instance of class
	Employee employee = new Employee();
	List<Employee> Employees = new List<Employee>();

	//calling view table function
	private void GetEmployees()
	{
		Employees = employeeService.GetEmployees();
	}
}

@code {
	//Creating instance of class
	Home home = new Home();
	List<Home> Homes = new List<Home>();
	
	//calling view table function
	private void GetHomes()
	{
		Homes = homeService.GetHomes();
	}
}

@code {
	//Creating instance of class
	HomeOwner homeOwner = new HomeOwner();
	List<HomeOwner> HomeOwners = new List<HomeOwner>();

	//calling view table function
	private void GetHomeOwners()
	{
		HomeOwners = homeOwnerService.GetHomeOwners();
	}
}

@code {
	//Creating instance of class
	Listing listing = new Listing();
	List<Listing> Listings = new List<Listing>();

	//calling view table function
	private void GetListings()
	{
		Listings = listingService.GetListings();
	}
}

@code {
	//Creating instance of class
	Location location = new Location();
	List<Location> Locations = new List<Location>();

	//calling view table function
	private void GetLocations()
	{
		Locations = locationService.GetLocations();
	}
}

@code {
	//Creating instance of class
	SalesMade salesMade = new SalesMade();
	List<SalesMade> SalesMadeList = new List<SalesMade>();

	//calling view table function
	private void GetAllSalesMade()
	{
		SalesMadeList = salesMadeService.GetSalesMade();
	}
}